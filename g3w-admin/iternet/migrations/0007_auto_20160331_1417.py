# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-31 14:17
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('iternet', '0006_auto_20160331_1349'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accesso',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('cod_acc', models.CharField(blank=True, max_length=16, null=True)),
                ('cod_ele', models.CharField(blank=True, max_length=15, null=True)),
                ('pas_car', models.CharField(blank=True, max_length=1, null=True)),
                ('the_geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3003)),
                ('tip_acc', models.ForeignKey(blank=True, db_column='tip_acc', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegTipAcc')),
            ],
            options={
                'db_table': 'accesso',
                'verbose_name': 'Accesso',
                'verbose_name_plural': 'Accessi',
            },
        ),
        migrations.CreateModel(
            name='ElementoStradale',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('cod_ele', models.CharField(blank=True, max_length=15, null=True)),
                ('nod_ini', models.CharField(blank=True, max_length=15, null=True)),
                ('nod_fin', models.CharField(blank=True, max_length=15, null=True)),
                ('cod_gst', models.CharField(blank=True, max_length=6, null=True)),
                ('lng', models.IntegerField(blank=True, null=True)),
                ('cod_reg', models.CharField(blank=True, max_length=29, null=True)),
                ('cod_top', models.CharField(blank=True, max_length=15, null=True)),
                ('cod_top2', models.CharField(blank=True, max_length=15, null=True)),
                ('the_geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=3003)),
                ('cls_lrg', models.ForeignKey(blank=True, db_column='cls_lrg', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegClsLrg')),
                ('cls_tcn', models.ForeignKey(blank=True, db_column='cls_tcn', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegClsTcn')),
                ('cmp_ele', models.ForeignKey(blank=True, db_column='cmp_ele', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegCmpEle')),
                ('cod_sed', models.ForeignKey(blank=True, db_column='cod_sed', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegCodSed')),
                ('cod_sta', models.ForeignKey(blank=True, db_column='cod_sta', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegCodSta')),
                ('org', models.ForeignKey(blank=True, db_column='org', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegOrg')),
                ('sot_pas', models.ForeignKey(blank=True, db_column='sot_pas', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegSotPas')),
                ('tip_ele', models.ForeignKey(blank=True, db_column='tip_ele', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegTipEle')),
                ('tip_gst', models.ForeignKey(blank=True, db_column='tip_gst', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegTipGst')),
            ],
            options={
                'db_table': 'elemento_stradale',
                'verbose_name': 'Elemento stradale',
                'verbose_name_plural': 'Elementi stradali',
            },
        ),
        migrations.CreateModel(
            name='GiunzioneStradale',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('cod_gnz', models.CharField(blank=True, max_length=15, null=True)),
                ('the_geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3003)),
                ('org', models.ForeignKey(blank=True, db_column='org', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegOrg')),
                ('tip_gnz', models.ForeignKey(blank=True, db_column='tip_gnz', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegTipGnz')),
            ],
            options={
                'db_table': 'giunzione_stradale',
                'verbose_name': 'Giunzione stradale',
                'verbose_name_plural': 'Giunzioni stradali',
            },
        ),
        migrations.CreateModel(
            name='NumeroCivico',
            fields=[
                ('cod_civ', models.CharField(max_length=19, primary_key=True, serialize=False)),
                ('cod_acc_int', models.CharField(blank=True, max_length=16, null=True)),
                ('num_civ', models.FloatField(blank=True, null=True)),
                ('esp_civ', models.CharField(blank=True, max_length=5, null=True)),
                ('cod_com', models.CharField(blank=True, max_length=4, null=True)),
                ('cod_top', models.CharField(blank=True, max_length=15, null=True)),
                ('cod_acc_est', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'numero_civico',
                'verbose_name': 'Numero civico',
                'verbose_name_plural': 'Numeri civici',
            },
        ),
        migrations.CreateModel(
            name='ToponimoStradale',
            fields=[
                ('cod_top', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('cod_top2', models.CharField(blank=True, max_length=15, null=True)),
                ('den_uff', models.CharField(blank=True, max_length=41, null=True)),
                ('cod_com', models.CharField(blank=True, max_length=10, null=True)),
                ('cod_via', models.CharField(blank=True, max_length=11, null=True)),
                ('den_senza', models.CharField(blank=True, max_length=49, null=True)),
                ('dug', models.ForeignKey(blank=True, db_column='dug', null=True, on_delete=django.db.models.deletion.CASCADE, to='iternet.LegDug')),
            ],
            options={
                'db_table': 'toponimo_stradale',
                'verbose_name': 'Toponimo',
                'verbose_name_plural': 'Toponimi',
            },
        ),
        migrations.RemoveField(
            model_name='accessi',
            name='tip_acc',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='cls_lrg',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='cls_tcn',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='cmp_ele',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='cod_sed',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='cod_sta',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='org',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='sot_pas',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='tip_ele',
        ),
        migrations.RemoveField(
            model_name='archi',
            name='tip_gst',
        ),
        migrations.DeleteModel(
            name='Civici',
        ),
        migrations.RemoveField(
            model_name='nodi',
            name='org',
        ),
        migrations.RemoveField(
            model_name='nodi',
            name='tip_gnz',
        ),
        migrations.RemoveField(
            model_name='toponimo',
            name='dug',
        ),
        migrations.DeleteModel(
            name='Accessi',
        ),
        migrations.DeleteModel(
            name='Archi',
        ),
        migrations.DeleteModel(
            name='Nodi',
        ),
        migrations.DeleteModel(
            name='Toponimo',
        ),
    ]
